/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [2:0] customin
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_fulladder_s;
  wire [1-1:0] M_fulladder_cout;
  reg [1-1:0] M_fulladder_x;
  reg [1-1:0] M_fulladder_y;
  reg [1-1:0] M_fulladder_cin;
  full_adder_1 fulladder (
    .x(M_fulladder_x),
    .y(M_fulladder_y),
    .cin(M_fulladder_cin),
    .s(M_fulladder_s),
    .cout(M_fulladder_cout)
  );
  
  wire [1-1:0] M_slowclock_value;
  counter_2 slowclock (
    .clk(clk),
    .rst(rst),
    .value(M_slowclock_value)
  );
  
  wire [3-1:0] M_plus_one_out;
  seq_plus_one_3 plus_one (
    .clk(M_slowclock_value),
    .rst(customin[0+0-:1] | customin[1+0-:1] | customin[2+0-:1]),
    .switchOn(customin[0+0-:1] | customin[1+0-:1] | customin[2+0-:1]),
    .out(M_plus_one_out)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_4 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [2-1:0] M_seven_seg_ctr_value;
  counter_5 seven_seg_ctr (
    .clk(clk),
    .rst(rst),
    .value(M_seven_seg_ctr_value)
  );
  
  wire [4-1:0] M_digit_out;
  seven_seg_select_digit_6 digit (
    .in(M_seven_seg_ctr_value),
    .out(M_digit_out)
  );
  
  wire [8-1:0] M_seven_value_out;
  seven_seg_select_value_7 seven_value (
    .in(M_seven_seg_ctr_value),
    .value(M_plus_one_out | customin),
    .out(M_seven_value_out)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    led = 8'h00;
    io_led = 24'h000000;
    M_fulladder_x = M_plus_one_out[0+0-:1] | customin[0+0-:1];
    M_fulladder_y = M_plus_one_out[1+0-:1] | customin[1+0-:1];
    M_fulladder_cin = M_plus_one_out[2+0-:1] | customin[2+0-:1];
    io_seg = M_seven_value_out;
    io_sel = M_digit_out;
    io_led[16+1+0-:1] = M_fulladder_s;
    io_led[16+0+0-:1] = M_fulladder_cout;
  end
endmodule
